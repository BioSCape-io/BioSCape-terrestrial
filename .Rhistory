sites$Plot
length(unique(sites$Plot))
allplots
allplots=st_read(file.path("data",gpkgfile)) %>%
left_join(points,by=c("plot","old_plot"))
points
points
allplots=st_read(file.path("data",gpkgfile)) %>%
left_join(set_geometry(points,NULL),by=c("plot","old_plot"))
allplots=st_read(file.path("data",gpkgfile)) %>%
left_join(st_set_geometry(points,NULL),by=c("plot","old_plot"))
allplots
gpkgfile
sites
sites=read_sheet(sheet,"SiteData")
sites
points
sites=read_sheet(sheet,"SiteData") %>%
mutate(old_plot=Plot) %>%
left_join(points,by="old_plot")
# Filter using grep to identify only plot and drop template sheets
plot_sheets <- sheets[grepl("plot", sheets) & !grepl("Template_Plot", sheets)]
roi_pi_areas
library(sf)
library(tidyverse)
# read in and process gpkgs
# area_m2	percent_area_pi	science_priority	box sortie / total sortie	science_priority_updated
path <- "/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/"
roi=st_read(file.path(path,"20230825_Team ROIs.gpkg")) %>% st_make_valid()
boxes=st_read(file.path(path,"20230718_G3_AVIRISNG_PRISM_boxes.gpkg"))
# lines
linefile=file.path(path,"20230718_FlightLines/20230718_FlightLines_hyplan_v0.kml")
linelayers = st_layers(linefile)#$layer_name # grep("AVIRIS",,fixed = T,value=T)
linelayers
st_layers(linefile)$layer_name
st_layers(linefile)$name
linelayers = grep("AVIRIS",st_layers(linefile)$name,fixed = T,value=T)
linelayers
linelayers = grepl("AVIRIS",st_layers(linefile)$name,fixed = T)
linelayers
lines=st_read(linefile)
lines=st_read(linefile,layer = linelayers[1])
linelayers[1]
roi=st_read(file.path(path,"20230825_Team ROIs.gpkg")) %>% st_make_valid()
path <- "/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/"
library(sf)
library(tidyverse)
path <- "/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/"
roi=st_read(file.path(path,"20230825_Team ROIs.gpkg")) %>% st_make_valid()
boxes=st_read(file.path(path,"20230718_G3_AVIRISNG_PRISM_boxes.gpkg"))
boxes=st_read(file.path(path,"20230905_G3_AVIRISNG_PRISM_boxes.gpkg"))
boxes=st_read(file.path(path,"20230905_G3_AVIRIS_PRISM_boxes.gpkg"))
roi=st_read(file.path(path,"20230825_Team ROIs.gpkg")) %>% st_make_valid()
## Summarize PI area requested
roi_pi <- roi %>%
mutate(area = st_area(.)) %>%
group_by(team_PI) %>%
summarize(area = sum(area))
roi_pi
## Summarize PI area requested
roi_pi <- roi %>%
mutate(area = st_area(.)) %>%
group_by(team_PI) %>%
summarize(area = set_units(sum(area),"km^2"))
roi_pi
# Clip ROIs to flight boxes, dissolve, and calculate areas
roi_pi_areas <-
st_intersection(roi, boxes) %>%
mutate(area = st_area(.)) %>%
group_by(box_nr, team_PI,priority) %>%
summarize(area = set_units(sum(area),"km^2"))
roi_pi_areas
roi_pi_areas %>%
filter(box_nr%in%1:5) %>%
select(team_PI, priority, box_nr) %>%
plot()
roi_pi_areas
roi_pi
roi_pi <- roi %>%
mutate(area = st_area(.)) %>%
group_by(team_PI) %>%
summarize(pi_total_area = set_units(sum(area),"km^2"))
# Clip ROIs to flight boxes, dissolve, and calculate areas
roi_pi_areas <-
st_intersection(roi, boxes) %>%
mutate(area = st_area(.)) %>%
group_by(box_nr, team_PI,priority) %>%
summarize(area = set_units(sum(area),"km^2")) %>%
left_join(st_set_geometry(roi_pi,NULL),by="team_PI")
roi_pi_areas
# Clip ROIs to flight boxes, dissolve, and calculate areas
roi_pi_areas <-
st_intersection(roi, boxes) %>%
mutate(area = st_area(.)) %>%
group_by(box_nr, team_PI,priority) %>%
summarize(area = set_units(sum(area),"km^2")) %>%
left_join(st_set_geometry(roi_pi,NULL),by="team_PI") %>%
mutate(priority_score=case_when(
high ~ 3,
medium ~ 2,
low ~ 1,
else ~ 1
# Clip ROIs to flight boxes, dissolve, and calculate areas
roi_pi_areas <-
st_intersection(roi, boxes) %>%
mutate(area = st_area(.)) %>%
group_by(box_nr, team_PI,priority) %>%
summarize(area = set_units(sum(area),"km^2")) %>%
left_join(st_set_geometry(roi_pi,NULL),by="team_PI") %>%
mutate(priority_score=case_when(
high ~ 3,
medium ~ 2,
low ~ 1,
FALSE ~ 1
))
# Clip ROIs to flight boxes, dissolve, and calculate areas
roi_pi_areas <-
st_intersection(roi, boxes) %>%
mutate(area = st_area(.)) %>%
group_by(box_nr, team_PI,priority) %>%
summarize(area = set_units(sum(area),"km^2")) %>%
left_join(st_set_geometry(roi_pi,NULL),by="team_PI") %>%
mutate(priority_score=case_when(
"high" ~ 3,
"medium" ~ 2,
"low" ~ 1,
FALSE ~ 1
))
?case_when
# Clip ROIs to flight boxes, dissolve, and calculate areas
roi_pi_areas <-
st_intersection(roi, boxes) %>%
mutate(area = st_area(.)) %>%
group_by(box_nr, team_PI,priority) %>%
summarize(area = set_units(sum(area),"km^2")) %>%
left_join(st_set_geometry(roi_pi,NULL),by="team_PI") %>%
mutate(priority_score=case_when(
priority=="high" ~ 3,
priority=="medium" ~ 2,
priority=="low" ~ 1
))
roi_pi_areas
st_read("/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/20230911_Big_Boxes_BioSCape.gpkg")%>%
st_transform(4326)%>%
st_coordinates()
library(tidyverse)
library(sf)
st_read("/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/20230911_Big_Boxes_BioSCape.gpkg")%>%
st_transform(4326)%>%
st_coordinates()
st_read("/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/20230911_Big_Boxes_BioSCape.gpkg")%>%
st_transform(4326)%>%
st_coordinates()
library(googlesheets4)
library(tidyverse)
library(vegan)
require(Rarefy)
library(sf)
library(piggyback)
library(units)
library(stringr)
tag="v20230905" #specify the most recent version of the plot kml
repo="BioSCape-io/BioSCape-terrestrial"
gpkgfile=paste0("bioscape_vegplots_",tag,".gpkg")
points=st_read(file.path("data",gpkgfile)) %>%
mutate(plotnum=as.numeric(gsub("T","",plot)))
# Define the URL or key of the Google Sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/19RdI9SdqOx8zn6XBxywgUNgmAHJ6JatOjtTEK-VAcQE/edit#gid=266439266"
gs4_auth(email = "adamw@buffalo.edu")
sheet <- gs4_get(sheet_url)
# Filter only plot tabs
sheets = sheet_names(sheet)
find_dups=read_sheet(sheet,"SiteData") %>% distinct(SiteCode_Plot) %>% arrange() %>% View()
find_dups
# site data
sitesheet=read_sheet(sheet,"SiteData")
sites= sitesheet %>%
mutate(old_plot=Plot) %>%
select(-Plot) %>%
##########
# The next section renames plots that had to be adjusted due to "J" prefix and duplicate numbers
mutate(plot=case_when(
old_plot==22&SiteCode=="swartberg" ~ 12,
old_plot==23&SiteCode=="swartberg" ~ 13,
old_plot==24&SiteCode=="swartberg" ~ 14,
TRUE ~ old_plot
)) %>%
left_join(points,by=c("plot"="plotnum"))
# Filter using grep to identify only plot and drop template sheets
plot_sheets <- sheets[grepl("plot", sheets) & !grepl("Template_Plot", sheets)]
plot_sheets
data_downloaded <- lapply(plot_sheets, function(tab) {
read_sheet(sheet,tab) %>%
select(-SeasonallyApparent) #drop field causing problems with weird entry in Rondevlei_147
})
gis.dir = "/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files/"
library(terra)
library(sf)
library(tidyverse)
library(rgeos)
library(dplyr)
library(units)
## read in flight boxes and team region of interest (ROI) polygons
boxes.dir= "20230905_G5_LVIS_boxes.gpkg"
rois.dir="20230825_Team ROIs.gpkg"
boxes <- st_read(file.path(gis.dir,boxes.dir))
rois <- st_read(file.path(gis.dir,rois.dir))
rois.dir="20230907_Team ROIs.gpkg"
rois <- st_read(file.path(gis.dir,rois.dir))
## read in flight boxes and team region of interest (ROI) polygons
boxes.dir= "20230913_G5_LVIS_boxes.gpkg"
boxes <- st_read(file.path(gis.dir,boxes.dir))
## read in flight boxes and team region of interest (ROI) polygons
boxes.dir= "20230913_G5_LVIS_elev_boxes.gpkg"
rois <- st_read(file.path(gis.dir,rois.dir))
boxes <- st_read(file.path(gis.dir,boxes.dir))
## fix and clean up geometries
boxes <- st_make_valid(boxes)
rois <- st_make_valid(rois)
## sum up area each PI requested (total)
roi_areas <- rois %>%
mutate(area = st_area(.)) %>%
group_by(team_PI) %>%
summarize(pi_area_tot = sum(area) )
roi_areas
## add column for area already acquired (in m^2)
team_PI <- c("Adler", "Cawse-Nicholson", "Cho", "Clark", "Guild",
"Rossi", "Slingsby", "Stovall", "Van Aardt", "Wu", "van Niekerk")
pi_area_acquired <- c("0", #Adler
"0", #Cawse-Nicholson
"0", #Cho
"0", #Clark
"0", #Guild
"0", #Rossi
"0", #Slingsby
"0", #Stovall
"0", #van Aardt
"0", #Wu
"0" #van Niekerk
)
area_acquired <- data.frame(team_PI, pi_area_acquired)
area_acquired
area_acquired$pi_area_acquired = as.numeric(area_acquired$pi_area_acquired)
area_acquired$pi_area_acquired = set_units(area_acquired$pi_area_acquired, m^2)
area_acquired
area_acquired$pi_area_acquired = as_units(area_acquired$pi_area_acquired)
area_acquired
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(pi_tot_area,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI") %>%
mutate(area_remaining=(pi_total_area-pi_area_acquired)/pi_total_area) %>%
mutate(priority_assigned=case_when(
priority=="high" ~ 3,
priority=="medium" ~ 2,
priority=="low" ~ 1
))
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) )
areas_pi_flightbox
pi_tot_area
roi_areas
st_set_geometry(roi_areas,NULL)
# clip ROIs to flight boxes, dissolve, and calculate areas (in m^2)
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI") %>%
mutate(area_remaining=(pi_total_area-pi_area_acquired)/pi_total_area) %>%
mutate(priority_assigned=case_when(
priority=="high" ~ 3,
priority=="medium" ~ 2,
priority=="low" ~ 1
))
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI")
areas_pi_flightbox
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI")
areas_pi_flightbox
# clip ROIs to flight boxes, dissolve, and calculate areas (in m^2)
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI") %>%
mutate(area_remaining=(pi_area_tot-pi_area_acquired)/pi_area_total) %>%
mutate(priority_assigned=case_when(
priority=="high" ~ 3,
priority=="medium" ~ 2,
priority=="low" ~ 1
))
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI") %>%
mutate(area_remaining=(pi_area_tot-pi_area_acquired)/pi_area_total)
# clip ROIs to flight boxes, dissolve, and calculate areas (in m^2)
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI") %>%
mutate(area_remaining=(pi_area_tot-pi_area_acquired)/pi_area_tot) %>%
mutate(priority_assigned=case_when(
priority=="high" ~ 3,
priority=="medium" ~ 2,
priority=="low" ~ 1
))
areas_pi_flightbox
area_priority_by_box <- areas_pi_flightbox %>%
mutate(pi_area_in_box = polygon_area/pi_total_area) %>%
mutate (polygon_area_priority = pi_area_in_box * priority_assigned * area_remaining)  %>% #penalised if you already have an acquisition
group_by (box_nr) %>%
summarize(area_based_box_priority = sum(polygon_area_priority) )
area_priority_by_box <- areas_pi_flightbox %>%
mutate(pi_area_in_box = polygon_area/pi_area_tot) %>%
mutate (polygon_area_priority = pi_area_in_box * priority_assigned * area_remaining)  %>% #penalised if you already have an acquisition
group_by (box_nr) %>%
summarize(area_based_box_priority = sum(polygon_area_priority) )
area_priority_by_box
area_priority_by_box <- areas_pi_flightbox %>%
mutate(pi_area_in_box = polygon_area/pi_area_tot) %>%
mutate (polygon_area_priority = pi_area_in_box * priority_assigned * area_remaining)  %>% #penalised if you already have an acquisition
group_by (box_nr)
area_priority_by_box
areas_pi_flightbox %>%
mutate(pi_area_in_box = polygon_area/pi_area_tot) %>%
mutate (polygon_area_priority = pi_area_in_box * priority_assigned * area_remaining)  %>% View()
area_priority_by_box
areas_pi_flightbox
# clip ROIs to flight boxes, dissolve, and calculate areas (in m^2)
areas_pi_flightbox <-
st_intersection(rois, boxes) %>%
mutate(polygon_area = st_area(.)) %>%
group_by(box_nr, team_PI, priority) %>%
summarize(polygon_area = sum(polygon_area) ) %>%
left_join(st_set_geometry(roi_areas,NULL),by="team_PI") %>%
left_join(area_acquired, by="team_PI") %>%
mutate(area_remaining=(pi_area_tot-pi_area_acquired)/pi_area_tot) %>%
mutate(priority_assigned=case_when(
priority=="high" ~ 3,
priority=="medium" ~ 2,
priority=="low" ~ 1
))
areas_pi_flightbox
area_priority_by_box
cloud_box_values <- st_set_geometry(boxes,NULL) #remove geometry from boxes, coerce to dataframe
cloud_box_values <- cloud_box_values [, c("box_nr", "cloudmean")] # pull out box_nr and cloud mean
cloud_box_values
cloud10=rast("webdata/cloud_10.tif")
cloud10=rast("data/cloud_10.tif")
cloud11=rast("data/cloud_11.tif")
## download cloud and elevation data
options(timeout=1000)
download.file("http://data.earthenv.org/cloud/MODCF_monthlymean_10.tif",
destfile="webdata/cloud_10.tif") #october
download.file("http://data.earthenv.org/cloud/MODCF_monthlymean_11.tif",
destfile="webdata/cloud_11.tif") #november
download.file("https://data.earthenv.org/topography/elevation_1KMma_SRTM.tif",
destfile="webdata/earthenv_maxelev_1km.tif") #1km elevation from SRTM
download.file("http://data.earthenv.org/cloud/MODCF_monthlymean_10.tif",
destfile="webdata/cloud_10.tif") #october
download.file("http://data.earthenv.org/cloud/MODCF_monthlymean_11.tif",
destfile="webdata/cloud_11.tif") #november
areas_pi_flightbox
area_priority_by_box
cloud_box_values <- st_set_geometry(boxes,NULL) #remove geometry from boxes, coerce to dataframe
cloud_box_values <- cloud_box_values [, c("box_nr", "cloudmean")] # pull out box_nr and cloud mean
cloud10=rast("webdata/cloud_10.tif")
cloud11=rast("webdata/cloud_11.tif")
elev=rast("webdata/earthenv_maxelev_1km.tif")
download.file("https://data.earthenv.org/topography/elevation_1KMma_SRTM.tif",
destfile="webdata/earthenv_maxelev_1km.tif") #1km elevation from SRTM
elev=rast("webdata/earthenv_maxelev_1km.tif")
boxfile= "20230913_G3_AVIRIS_PRISM_elev_boxes.gpkg"
outboxfile= "/Rscripts_anabelle/20230913_G3_AVIRIS_PRISM_boxes_elev_check.gpkg"
## reproject flight boxes into crs of cloud layers
boxes1=st_read(file.path(boxdir,boxfile)) %>%
st_transform(st_crs(cloud10))
## packages
library(terra)
library(sf)
library(tidyverse)
library(rgeos)
library(dplyr)
library(units)
cloud10=rast("webdata/cloud_10.tif")
cloud11=rast("webdata/cloud_11.tif")
elev=rast("webdata/earthenv_maxelev_1km.tif")
## read in gpkg of flight boxes
boxfile= "20230913_G3_AVIRIS_PRISM_elev_boxes.gpkg"
outboxfile= "/Rscripts_anabelle/20230913_G3_AVIRIS_PRISM_boxes_elev_check.gpkg"
## reproject flight boxes into crs of cloud layers
boxes1=st_read(file.path(boxdir,boxfile)) %>%
st_transform(st_crs(cloud10))
boxdir="/Users/adamw/Library/CloudStorage/GoogleDrive-adammichaelwilson@gmail.com/Shared drives/BioSCape_Admin/GIS files"
boxfile= "20230913_G3_AVIRIS_PRISM_elev_boxes.gpkg"
boxfile= "20230919_G3_AVIRIS_PRISM_elev_boxes.gpkg"
## reproject flight boxes into crs of cloud layers
boxes1=st_read(file.path(boxdir,boxfile)) %>%
st_transform(st_crs(cloud10))
## extract cloud and elevation stats
boxes1$cloud10=terra::extract(cloud10,boxes1,fun=mean)[,2]/100
boxes1$cloud11=terra::extract(cloud11,boxes1,fun=mean)[,2]/100
boxes1$maxmaxelev=terra::extract(elev,boxes1,fun=max)[,2]
boxes1$cloud10
## reproject flight boxes into crs of cloud layers
boxes1=st_read(file.path(boxdir,boxfile)) %>%
st_transform(st_crs(cloud10))
boxes1
## extract cloud and elevation stats
boxes1$cloud10=terra::extract(cloud10,boxes1,fun=mean)[,2]/100
cloud10
st_crs(cloud10)
library(googlesheets4)
library(tidyverse)
library(vegan)
require(Rarefy)
library(sf)
library(piggyback)
library(units)
library(stringr)
tag="v20230905" #specify the most recent version of the plot kml
repo="BioSCape-io/BioSCape-terrestrial"
gpkgfile=paste0("bioscape_vegplots_",tag,".gpkg")
points=st_read(file.path("data",gpkgfile)) %>%
mutate(plotnum=as.numeric(gsub("T","",plot)))
# Define the URL or key of the Google Sheet
sheet_urls <- c(
"https://docs.google.com/spreadsheets/d/19RdI9SdqOx8zn6XBxywgUNgmAHJ6JatOjtTEK-VAcQE/edit#gid=266439266", # Ross 01
"https://docs.google.com/spreadsheets/d/12IYf_NobQfFlHBQTTZ3ZmuWdzklg-xlkJ5_-TZRcDug/edit#gid=266439266", #Ross 01b
"https://docs.google.com/spreadsheets/d/1OEE2u7NmZ37a4y8iogjh8r0R22L-eVxV04ns8yqy91A/edit#gid=266439266", # 02
"https://docs.google.com/spreadsheets/d/11S2nd_3RnbKTMDEo6fj67mnwBPnSIgiOpZBVTx287Tc/edit#gid=266439266", #03
"https://docs.google.com/spreadsheets/d/113GkBpKVlcGeA8aoWyaN0lWiW4vbtgDokzD0xcjRquQ/edit#gid=266439266") #04
### Data sheets
# Authenticate and access the Google Sheet
gs4_auth(email = "adamw@buffalo.edu")
## loop through sheets and assemble data
#foreach(sheet_url=sheet_urls) %do% {
# sheet_url=sheet_urls[1]
sheet <- gs4_get(sheet_url)
sheet_url=sheet_urls[1]
sheet <- gs4_get(sheet_url)
# Filter only plot tabs
sheets = sheet_names(sheet)
if(F) find_dups=read_sheet(sheet,"SiteData") %>% distinct(SiteCode_Plot) %>% arrange() %>% View()
find_dups=read_sheet(sheet,"SiteData") %>% distinct(SiteCode_Plot) %>% arrange() %>% View()
# site data
sitesheet=read_sheet(sheet,"SiteData")
sites= sitesheet %>%
mutate(old_plot=Plot) %>%
select(-Plot) %>%
##########
# The next section renames plots that had to be adjusted due to "J" prefix and duplicate numbers
mutate(plot=case_when(
old_plot==22&SiteCode=="swartberg" ~ 12,
old_plot==23&SiteCode=="swartberg" ~ 13,
old_plot==24&SiteCode=="swartberg" ~ 14,
TRUE ~ old_plot
)) %>%
left_join(points,by=c("plot"="plotnum","old_plot"))
library(googlesheets4)
library(tidyverse)
library(vegan)
require(Rarefy)
library(sf)
library(piggyback)
library(units)
library(stringr)
points
points %>%
mutate(old_plotnum=as.numeric(unlist(regmatches(Name, gregexpr("[0-9]+\\.?[0-9]*", old_plot)))))
points %>%
mutate(old_plotnum=as.numeric(unlist(regmatches(old_plot, gregexpr("[0-9]+\\.?[0-9]*", old_plot)))))
# get plots to update
points %>%
mutate(old_plotnum=as.numeric(unlist(regmatches(old_plot, gregexpr("[0-9]+\\.?[0-9]*", old_plot))))) %>%
filter(plotnum!=old_plotnum)
# get plots to update
numchange = points %>%
mutate(old_plotnum=as.numeric(unlist(regmatches(old_plot, gregexpr("[0-9]+\\.?[0-9]*", old_plot))))) %>%
filter(plotnum!=old_plotnum) %>% View()
numchange = points %>%
mutate(old_plotnum=as.numeric(unlist(regmatches(old_plot, gregexpr("[0-9]+\\.?[0-9]*", old_plot))))) %>%
filter(plotnum!=old_plotnum)
numchange

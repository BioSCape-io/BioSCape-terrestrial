data <- data_downloaded %>%
bind_rows()
data
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_")) %>%
left_join(sites,by="SiteCode_Plot_Quadrant")
data
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_")) %>%
left_join(sites,by=c("SiteCode","Plot","SiteCode_Plot_Quadrant") )
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_")) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant") )
data
data %>%
pivot_wider(id_cols=c("SiteCode_Plot","Genus_Species_combo"),
values_from = AbundanceAlive_count)
data
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"))
data
data %>%
pivot_wider(id_cols=c("SiteCode_Plot","Genus_Species_combo"),
values_from = AbundanceAlive_count)
data
data %>%
pivot_wider(id_cols=c("SiteCode_Plot","Genus_Species_combo"),
values_from = "AbundanceAlive_count")
data %>%
pivot_wider(id_cols=c("SiteCode_Plot","Genus_Species_combo"))
data %>%
pivot_wider(id_cols=c("SiteCode_Plot","Genus_Species_combo"),
values_from = "AbundanceAlive_count")
glimpse(data)
data %>%
pivot_wider(id_cols=c("SiteCode_Plot","Genus_Species_combo"),
values_from = "AbundanceAlive_count")
data %>%
pivot_wider(names_from=c("SiteCode_Plot","Genus_Species_combo"),
values_from = "AbundanceAlive_count")
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
values_from = "AbundanceAlive_count")
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count")
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum())
data
values_from = "AbundanceAlive_count",values_fn=sum
)
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum)
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum,values_fill = 0)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum,values_fill = 0)
library(vegan)
rarefy(plot_species, sample = 5, se = FALSE, MARGIN = 1)
rarefy(plot_species, sample = 1, se = FALSE, MARGIN = 1)
(raremax <- min(rowSums(plot_species)))
plot_species
rowSums(plot_species)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum,values_fill = 0) %>%
as.matrix()
(raremax <- min(rowSums(plot_species)))
plot_species
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum,values_fill = 0)
plot_species
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum,values_fill = 0)
(raremax <- min(rowSums(plot_species)))
(raremax <- min(rowSums(plot_species[-1,])))
(raremax <- min(rowSums(plot_species[,-1])))
(raremax <- min(rowSums(plot_species[,-1],na.rm=T)))
plot_species[,-1]
rowSums(plot_species[,-1],na.rm=T))
rowSums(plot_species[,-1],na.rm=T)
(raremax <- min(rowSums(plot_species[-1,-1],na.rm=T)))
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax
rarefy(plot_species, sample = 1, se = FALSE, MARGIN = 1)
rarefy(plot_species[-1,-1], sample = 1, se = FALSE, MARGIN = 1)
rarefy(plot_species[-1,-1], raremax, sample = 1, se = FALSE, MARGIN = 1)
rarefy
rarefy(plot_species[-1,-1], sample = raremax, se = FALSE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = FALSE, MARGIN = 1)
raremax
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=sum>0,values_fill = 0)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",values_fn=function(x) sum(x)>0,values_fill = 0)
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
plot_species[-1,-1]
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",
values_fn=function(x) ifelse(x>0,1,0),values_fill = 0)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",
values_fn=function(x) ifelse(sum(x)>0,1,0),values_fill = 0)
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
plot_species[-1,-1]
raremax
rowSums(plot_species[-1,-1],na.rm=T)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot_Quadrant"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",
values_fn=function(x) ifelse(sum(x)>0,1,0),values_fill = 0)
plot_species
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
raremax
raremax = 10
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
raremax = 3
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
warnings()
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 2)
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "AbundanceAlive_count",
values_fn=function(x) ifelse(sum(x)>0,1,0),values_fill = 0)
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax = 3
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
plot_species
data %>%
group_by(SiteCode_Plot,Date) %>%
summarize(n_species=length(unique(Genus_Species_combo)))
data
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"))
data
sites
require(Rarefy)
install.packages("Rarefy")
a<-list(NA,'Shannon')
names(a)<-c('comm','method')
library(Rarefy)
duneFVG
data("duneFVG")
duneFVG$total
data
glimpse(data)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "PercentCoverAlive",values_fill = 0)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "PercentCoverAlive",values_fill = 0)
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"))
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_")) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Quadrant") )
data
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_")) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_")) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data
sites
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot))
data
data_downloaded
plot_sheets
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data %>%
group_by(,Date) %>%
summarize(n_species=length(unique(Genus_Species_combo)))
data %>%
group_by(SiteCode_Plot,Date) %>%
summarize(n_species=length(unique(Genus_Species_combo)))
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "PercentCoverAlive",values_fill = 0)
data
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
values_from = "PercentCoverAlive",
values_fn = mean, values_fill = 0)
plot_species
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
plot_species
glimpse(data)
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
#              values_from = "PercentCoverAlive",
values_from = "AbundanceAlive_count",
values_fn = sum, values_fill = 0)
raremax <- min(rowSums(plot_species[-1,-1],na.rm=T))
raremax
rarefy(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
a<-list(NA,'Shannon')
names(a)<-c('comm','method')
rare_shannon<-rare_alpha(plot_species[-1,-1],method="fun_div",random=999,fun_div='speciesdiv',args=a,mean=TRUE)
rare_shannon<-rare_alpha(plot_species[-1,-1],
method="fun_div",random=999,
fun_div='speciesdiv',args=a,mean=TRUE)
?rare_alpha
rare_shannon<-rare_alpha(plot_species[-1,-1],
method="fun_div",random=999,
args=a,mean=TRUE)
rare_shannon<-rare_alpha(plot_species[-1,-1],
method="hill",random=999,
args=a,mean=TRUE)
rare_shannon
plot(rare_shannon[,1],ylab="Shannon index",xlab="Number of sampling units",type="l", ylim=range(rare_shannon,na.rm=TRUE))
lines(rare_shannon[,2],lty=2)
lines(rare_shannon[,3],lty=2)
rarecurve(plot_species[-1,-1], sample = raremax, se = TRUE, MARGIN = 1)
rare_shannon<-rare_alpha(plot_species[-1,-1],
method="HCDT",random=999,
args=a,mean=TRUE)
plot(rare_shannon[,1],ylab="Shannon index",xlab="Number of sampling units",type="l", ylim=range(rare_shannon,na.rm=TRUE))
lines(rare_shannon[,2],lty=2)
lines(rare_shannon[,3],lty=2)
ncol(plot_species)
data %>%
group_by(SiteCode_Plot,Date) %>%
summarize(n_species=length(unique(Genus_Species_combo))) %>%
arrange(Date)
data %>%
group_by(Date, SiteCode_Plot) %>%
summarize(n_species=length(unique(Genus_Species_combo))) %>%
arrange(Date)
data %>%
group_by(Date, SiteCode_Plot) %>%
summarize(Species_Count=length(unique(Genus_Species_combo))) %>%
arrange(Date)
data %>%
group_by(Date, SiteCode_Plot) %>%
summarize(Species_Count=length(unique(Genus_Species_combo))) %>%
na.omit() %>%
arrange(Date)
data %>%
group_by(Date, SiteCode_Plot) %>%
summarize(Species_Count=length(unique(Genus_Species_combo))) %>%
na.omit() %>%
arrange(Date) %>%
knitr::kable()
library(piggyback)
data
pb_upload(data)
# Load packages
library(rgee)
library(targets)
library(sf)
library(terra)
# Load packages
library(rgee)
install.packages("rgee")
# Load packages
library(rgee)
library(targets)
library(sf)
library(terra)
library(raster)
library(tidyverse)
library(lubridate)
library(leaflet)
library(ggplot2)
library(ggpubr)
library(leafem)
library(plotly)
# get domain
domain <- st_read("data/output/domain.gpkg",
quiet = TRUE)
getwd()
domain <- st_read("data/output/domain.gpkg",
quiet = TRUE)
getwd()
# get domain
domain <- st_read("data/output/domain.gpkg",
quiet = TRUE)
library(rgee)
library(targets)
library(sf)
library(terra)
library(raster)
library(tidyverse)
library(lubridate)
library(leaflet)
library(ggplot2)
library(ggpubr)
library(leafem)
library(plotly)
library(googlesheets4)
library(tidyverse)
library(vegan)
require(Rarefy)
# Define the URL or key of the Google Sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/19RdI9SdqOx8zn6XBxywgUNgmAHJ6JatOjtTEK-VAcQE/edit#gid=266439266"
# Authenticate and access the Google Sheet
gs4_auth(email = "adamw@buffalo.edu")#, token = "your_token")
sheet <- gs4_get(sheet_url)
# Filter only plot tabs
plot_sheets <- grep("_plot",sheet_names(sheet),value=T,ignore.case = T)
# site data
sites=read_sheet(sheet,"SiteData")
# Download data from the specified tabs as data frames
data_downloaded <- lapply(plot_sheets, function(tab) {
read_sheet(sheet,tab)
})
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data
plot_sheets
data_downloaded
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot))
data_downloaded
plot_sheets
grep("_plot",sheet_names(sheet),value=T,ignore.case = T) %>%
filter(!grepl("emplate"))
sheet_names(sheet)
grep("_plot",sheet_names(sheet),value=T,ignore.case = T)
grep("_plot",sheet_names(sheet),value=T,ignore.case = T) %>%
as.data.frame() %>%
filter(!grepl("emplate"))
grep("_plot",sheet_names(sheet),value=T,ignore.case = T) %>%
as.data.frame() %>%
filter(!grepl("emplate",x))
# Filter only plot tabs
sheets = sheet_names(sheet)
plot_sheets <- sheets[sheets[grep("_plot", sheets) & !grep("emplate", sheets)]]
plot_sheets
sheets[grep("_plot", sheets)
]
grep("emplate", sheets)
plot_sheets <- sheets[sheets[grepl("_plot", sheets) & !grepl("emplate", sheets)]]
plot_sheets
grepl("_plot", sheets)
grepl("emplate", sheets)
!grepl("emplate", sheets)
sheets[grepl("_plot", sheets) & !grepl("emplate", sheets)
]
plot_sheets <- sheets[sheets[grepl("_plot", sheets) & !grepl("emplate", sheets)]]
plot_sheets
sheets[sheets[grepl("_plot", sheets) & !grepl("emplate", sheets)]]
plot_sheets <- sheets[grepl("_plot", sheets) & !grepl("emplate", sheets)]
plot_sheets
sheets
plot_sheets <- sheets[grepl("plot", sheets) & !grepl("emplate", sheets)]
plot_sheets
# site data
sites=read_sheet(sheet,"SiteData")
# Download data from the specified tabs as data frames
data_downloaded <- lapply(plot_sheets, function(tab) {
read_sheet(sheet,tab)
})
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
sheet
plot_sheets
# Download data from the specified tabs as data frames
data_downloaded <- lapply(plot_sheets, function(tab) {
read_sheet(sheet,tab) %>%
mutate(SeasonallyApparent=as.numeric(SeasonallyApparent))
})
data <- data_downloaded %>%
bind_rows() %>%
separate(SiteCode_Plot_Quadrant,into=c("SiteCode","Plot","Quadrant"),sep="_",remove = F) %>%
mutate("SiteCode_Plot"=paste(SiteCode,Plot,sep="_"),
Plot=as.numeric(Plot)) %>%
left_join(sites,by=c("SiteCode_Plot_Quadrant","SiteCode","SiteCode_Plot","Plot","Quadrant") )
data
data %>%
group_by(Date, SiteCode_Plot) %>%
summarize(Species_Count=length(unique(Genus_Species_combo))) %>%
na.omit() %>%
arrange(Date) %>%
knitr::kable()
plot_species <-
data %>%
pivot_wider(id_cols=c("SiteCode_Plot"),
names_from="Genus_Species_combo",
#              values_from = "PercentCoverAlive",
values_from = "AbundanceAlive_count",
values_fn = sum, values_fill = 0)
a<-list(NA,'Shannon')
names(a)<-c('comm','method')
rare_shannon<-rare_alpha(plot_species[-1,-1],
method="HCDT",random=999,
args=a,mean=TRUE)
plot(rare_shannon[,1],ylab="Shannon index",xlab="Number of sampling units",type="l", ylim=range(rare_shannon,na.rm=TRUE))
lines(rare_shannon[,2],lty=2)
lines(rare_shannon[,3],lty=2)
